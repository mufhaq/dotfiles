#!/bin/sh

dte() {
    echo " $(date +"%u:%d/%m/%Y")"
}

tme() {
    echo " $(date +"%R")"
}

bat_capacity() {
    cap=$(count=$(acpi -b | wc -l); sum=$(acpi -b | egrep -o '[0-9]{1,3}%' | tr -d '%' | xargs -I% echo -n '+%'); echo $(( sum / count )))
    if   [ $cap -ge 0  ] && [ $cap -le 10  ]; then
        cap=" $cap%"
    elif [ $cap -ge 11 ] && [ $cap -le 20  ]; then
        cap=" $cap%"
    elif [ $cap -ge 21 ] && [ $cap -le 30  ]; then
        cap=" $cap%"
    elif [ $cap -ge 31 ] && [ $cap -le 40  ]; then
        cap=" $cap%"
    elif [ $cap -ge 41 ] && [ $cap -le 50  ]; then
        cap=" $cap%"
    elif [ $cap -ge 51 ] && [ $cap -le 60  ]; then
        cap=" $cap%"
    elif [ $cap -ge 61 ] && [ $cap -le 70  ]; then
        cap=" $cap%"
    elif [ $cap -ge 71 ] && [ $cap -le 80  ]; then
        cap=" $cap%"
    elif [ $cap -ge 81 ] && [ $cap -le 90  ]; then
        cap=" $cap%"
    elif [ $cap -ge 91 ] && [ $cap -le 100 ]; then
        cap=" $cap%"
    else
        cap=" UNKNWN"
    fi
    echo $cap
}

bat_state() {
    bat0=$(cat /sys/class/power_supply/BAT0/status)
    bat1=$(cat /sys/class/power_supply/BAT1/status)
    state=""

    # state known list: Charging, Discharging, Full

    #if [ $bat1 = "Charging" ]; then
    #fi
}

cpu() {
    cpu_usage=$(top -bn1 | grep "Cpu(s)" | sed "s/.*, *\([0-9.]*\)%* id.*/\1/" | awk '{print 100 - $1}')
    cpu_usage=${cpu_usage%.*}
    space=''
    if [ $cpu_usage -le 9 ]; then
        space='  '
        cpu_usage="${cpu_usage}"
    elif [ $cpu_usage -gt 9 ] && [ $cpu_usage -le 99 ]; then
        space=' '
        cpu_usage="${cpu_usage}"
    else
        cpu_usage="${cpu_usage}"
    fi
    printf '%s' "ﮕ ${space}${cpu_usage}%"
}

cpu_temp() {
    get_temp_cpu0=$(cat /sys/class/thermal/thermal_zone0/temp)
    temp_cpu0=$(($get_temp_cpu0/1000))
    echo "" $temp_cpu0"°C"
}

backlight() {
    backlight=$(xbacklight -get | cut -d "." -f1)
    echo " $backlight%"
}

mem() {
    mem_total=$(free -m | awk 'NR%2==0 {print $2}')
    mem_avail=$(free -m | awk 'NR%2==0 {print $7}')
    mem_used=$(( $mem_total - $mem_avail))
    mem_usage=$(( $mem_used * 100 / $mem_total ))
    space=''
    if [ $mem_usage -le 9 ]; then
        space='  '
        mem_usage="${mem_usage}"
    elif [ $mem_usage -gt 9 ] && [ $mem_usage -le 99 ]; then
        space=' '
        mem_usage="${mem_usage}"
    else
        mem_usage="${mem_usage}"
    fi
    printf '%s' " ${space}${mem_usage}%"
}

net() {
    network=$(iwgetid -r)
    if [ -z ${network} ]; then
        network="睊 disconnected"
    else
        network="直 $(iwgetid -r)"
    fi
    echo $network
}

vol() {
    volume=$(pamixer --get-volume-human | sed 's/%//')
    if [ $volume != "muted" ]; then
        if [ $volume -eq 0 ]; then
            volume="奄 ${volume}%"
        elif [ $volume -gt 0 ] && [ $volume -le 50 ]; then
            volume="奔 ${volume}%"
        else
            volume="墳 ${volume}%"
        fi
    else
        volume="婢 ${volume}"
    fi

    echo $volume
}

disk() {
    root=$(df -h --output=pcent / | awk 'NR%2==0 {print $0}' | tr -d ' ')
    home=$(df -h --output=pcent /home | awk 'NR%2==0 {print $0}' | tr -d ' ')
    echo " /=${root} /home=${home}"
}

status() {
    echo " $(backlight) $(vol) $(cpu_temp) $(mem) $(cpu) $(bat_capacity) $(net) $(tme) $(dte)"
}

while true; do
    xsetroot -name "$(status)"
    sleep .5s
done
